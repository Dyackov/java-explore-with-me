DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS CATEGORIES;
DROP TABLE IF EXISTS LOCATION;
DROP TABLE IF EXISTS EVENTS;
DROP TABLE IF EXISTS COMPILATIONS;
DROP TABLE IF EXISTS COMPILATIONS_EVENTS;
DROP TABLE IF EXISTS COMMENTS;

CREATE TABLE IF NOT EXISTS USERS
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(250)                            NOT NULL CHECK ( LENGTH(name) >= 2 ),
    email VARCHAR(254)                            NOT NULL CHECK ( LENGTH(email) >= 6),
    CONSTRAINT PK_USER PRIMARY KEY (id),
    CONSTRAINT USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS CATEGORIES
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(50)                             NOT NULL CHECK ( LENGTH(name) >= 1 ),
    CONSTRAINT PK_CATEGORY PRIMARY KEY (id),
    CONSTRAINT CATEGORIES_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS LOCATION
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat FLOAT,
    lon FLOAT,
    CONSTRAINT PK_LOCATION PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS EVENTS
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation         VARCHAR                                 NOT NULL,
    category_id        BIGINT                                  NOT NULL,
    confirmed_requests BIGINT,
    created_on         TIMESTAMP WITHOUT TIME ZONE,
    description        VARCHAR,
    event_date         TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    initiator_id       BIGINT                                  NOT NULL,
    location_id        BIGINT                                  NOT NULL,
    paid               BOOLEAN                                 NOT NULL,
    participant_limit  BIGINT,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN,
    state              VARCHAR,
    title              VARCHAR                                 NOT NULL,
    views              BIGINT,
    CONSTRAINT PK_EVENT PRIMARY KEY (id),
    CONSTRAINT FK_EVENT_CATEGORY FOREIGN KEY (category_id) REFERENCES CATEGORIES (id),
    CONSTRAINT FK_EVENT_INITIATOR FOREIGN KEY (initiator_id) REFERENCES USERS (id),
    CONSTRAINT FK_EVENT_LOCATION FOREIGN KEY (location_id) REFERENCES LOCATION (id)
);

CREATE TABLE IF NOT EXISTS REQUESTS
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created      TIMESTAMP WITHOUT TIME ZONE,
    event_id     BIGINT,
    requester_id BIGINT,
    status       VARCHAR,
    CONSTRAINT PK_REQUEST PRIMARY KEY (id),
    CONSTRAINT FK_REQUEST_EVENT FOREIGN KEY (event_id) REFERENCES EVENTS (id),
    CONSTRAINT FK_REQUEST_USER FOREIGN KEY (requester_id) REFERENCES USERS (id)
);

CREATE TABLE IF NOT EXISTS COMPILATIONS
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN DEFAULT FALSE                   NOT NULL,
    title  VARCHAR(50)                             NOT NULL CHECK ( LENGTH(title) >= 1 ),
    CONSTRAINT PK_COMPILATION PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS COMPILATIONS_EVENTS
(
    compilation_id BIGINT NOT NULL,
    event_id       BIGINT NOT NULL,
    CONSTRAINT FK_COMPILATION FOREIGN KEY (compilation_id) REFERENCES COMPILATIONS (id),
    CONSTRAINT FK_COMPILATION_EVENT FOREIGN KEY (event_id) REFERENCES EVENTS (id)
);

CREATE TABLE IF NOT EXISTS COMMENTS
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text           VARCHAR(1000)                           NOT NULL CHECK ( LENGTH(text) >= 5 ),
    commentator_id BIGINT                                  NOT NULL,
    event_id       BIGINT                                  NOT NULL,
    created        TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    status         VARCHAR                                 NOT NULL,
    CONSTRAINT PK_COMMENT PRIMARY KEY (id),
    CONSTRAINT FK_COMMENT_USER FOREIGN KEY (commentator_id) REFERENCES USERS (id),
    CONSTRAINT FK_COMMENT_EVENT FOREIGN KEY (event_id) REFERENCES EVENTS (id)
);